import SwiftUI

class MainViewModel: ObservableObject {
    @Published var selectedTab: Tab = .home {
        didSet {
            // Tab deƒüi≈ütiƒüinde state'i sƒ±fƒ±rla
            if selectedTab != .create {
                musicGeneratorViewModel?.resetState()
                pendingPrompt = nil
                // Dismiss notification'ƒ± g√∂nder
                NotificationCenter.default.post(
                    name: NSNotification.Name("DismissDetailView"),
                    object: nil
                )
            }
        }
    }
    @Published var generatedSongs: [GeneratedMusic] = []
    @Published var musicGeneratorViewModel: MusicGeneratorViewModel?
    private var pendingPrompt: MusicPromptTemplate?  // Bekleyen prompt'u tut
    
    /*
    enum Tab {
        case home, library, create, profile
    }
     */
    
    
    func navigateToLibrary() {
        selectedTab = .library
    }
    
    func navigateToCreate() {
        selectedTab = .create
    }
    
    func navigateToCreateWithPrompt(_ prompt: MusicPromptTemplate) {
        selectedTab = .create
        
        if let viewModel = musicGeneratorViewModel {
            viewModel.updateWithPrompt(prompt)
            print("‚úÖ Prompt iletildi")
        } else {
            // ViewModel hen√ºz hazƒ±r deƒüil, prompt'u sakla
            pendingPrompt = prompt
            print("‚è≥ Prompt beklemede")
        }
    }
    
    // MusicGeneratorViewModel'i set etmek i√ßin
    func setMusicGeneratorViewModel(_ viewModel: MusicGeneratorViewModel) {
        self.musicGeneratorViewModel = viewModel
        print("üîÑ MusicGeneratorViewModel set edildi")
        
        // Bekleyen prompt varsa ≈üimdi i≈üle
        if let prompt = pendingPrompt {
            viewModel.updateWithPrompt(prompt)
            pendingPrompt = nil
            print("‚úÖ Bekleyen prompt i≈ülendi")
        }
    }
    
    func addGeneratedSongs(_ songs: [GeneratedMusic]) {
        generatedSongs = songs + generatedSongs
    }
    
    func updateGeneratedSong(_ updatedSong: GeneratedMusic) {
        if let index = generatedSongs.firstIndex(where: { $0.id == updatedSong.id }) {
            generatedSongs[index] = updatedSong
        }
    }
} 
